2019-03-30 21:28:24,618 [INFO] [main] io.renren.GoodsDetailMaker [StartupInfoLogger.java : 50] Starting GoodsDetailMaker on SC-201811251034 with PID 12900 (started by Administrator in C:\code\java\springboot\renren-security\renren-api)
2019-03-30 21:28:24,646 [DEBUG] [main] io.renren.GoodsDetailMaker [StartupInfoLogger.java : 53] Running with Spring Boot v2.0.5.RELEASE, Spring v5.0.9.RELEASE
2019-03-30 21:28:24,650 [INFO] [main] io.renren.GoodsDetailMaker [SpringApplication.java : 684] The following profiles are active: dev
2019-03-30 21:28:24,892 [INFO] [main] o.s.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java : 590] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@545b995e: startup date [Sat Mar 30 21:28:24 CST 2019]; root of context hierarchy
2019-03-30 21:28:29,323 [INFO] [main] o.s.data.repository.config.RepositoryConfigurationDelegate [RepositoryConfigurationDelegate.java : 172] Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-30 21:28:30,961 [INFO] [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java : 326] Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$54174a22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-30 21:28:31,148 [INFO] [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [PostProcessorRegistrationDelegate.java : 326] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8dab8bf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-30 21:28:31,795 [INFO] [main] c.a.d.spring.boot.autoconfigure.DruidDataSourceAutoConfigure [DruidDataSourceAutoConfigure.java : 56] Init DruidDataSource
2019-03-30 21:28:33,355 [INFO] [main] com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java : 930] {dataSource-1} inited
2019-03-30 21:28:39,347 [WARN] [main] com.baomidou.mybatisplus.toolkit.TableInfoHelper [TableInfoHelper.java : 188] Warn: Could not find @TableId in Class: io.renren.entity.system.TbArea.
2019-03-30 21:28:39,348 [WARN] [main] com.baomidou.mybatisplus.mapper.AutoSqlInjector [AutoSqlInjector.java : 147] class io.renren.entity.system.TbArea ,Not found @TableId annotation, Cannot use Mybatis-Plus 'xxById' Method.
2019-03-30 21:28:41,309 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/login],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.ApiLoginController.login(io.renren.form.LoginForm)
2019-03-30 21:28:41,312 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/logout],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.ApiLoginController.logout(long)
2019-03-30 21:28:41,313 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/getCode],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.ApiLoginController.getCode(io.renren.form.CodeForm,javax.servlet.http.HttpServletRequest)
2019-03-30 21:28:41,314 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/loginByCode],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.ApiLoginController.loginByCode(io.renren.form.LoginForm,javax.servlet.http.HttpServletRequest)
2019-03-30 21:28:41,316 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/register],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.ApiRegisterController.register(io.renren.form.RegisterForm)
2019-03-30 21:28:41,322 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/userId],methods=[GET]}" onto public io.renren.common.utils.R io.renren.controller.ApiTestController.userInfo(java.lang.Integer)
2019-03-30 21:28:41,323 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/userInfo],methods=[GET]}" onto public io.renren.common.utils.R io.renren.controller.ApiTestController.userInfo(io.renren.entity.user.UserEntity)
2019-03-30 21:28:41,324 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/notToken],methods=[GET]}" onto public io.renren.common.utils.R io.renren.controller.ApiTestController.notToken()
2019-03-30 21:28:41,329 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/goodsCategory/search],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.GoodsCategoryController.search(io.renren.form.CategorySearchForm)
2019-03-30 21:28:41,332 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/goods/list],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.GoodsController.list(io.renren.form.GoodsListSearchForm)
2019-03-30 21:28:41,333 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/goods/{id}],methods=[GET]}" onto public io.renren.common.utils.R io.renren.controller.GoodsController.goodsDetail(java.lang.Long)
2019-03-30 21:28:41,339 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/msite/bannerAndNav],methods=[GET]}" onto public io.renren.common.utils.R io.renren.controller.MSiteController.bannerList()
2019-03-30 21:28:41,344 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/secKill/killGoods],methods=[POST]}" onto public io.renren.common.utils.R io.renren.controller.SecKillController.secKill(io.renren.form.SecKillForm,io.renren.entity.user.UserEntity)
2019-03-30 21:28:41,345 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/api/secKill/result],methods=[GET]}" onto public io.renren.common.utils.R io.renren.controller.SecKillController.miaoshaResult(io.renren.entity.user.UserEntity,long)
2019-03-30 21:28:41,355 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-30 21:28:41,358 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-30 21:28:41,359 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-30 21:28:41,368 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-03-30 21:28:41,369 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerMapping [AbstractHandlerMethodMapping.java : 549] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-30 21:28:42,094 [INFO] [main] s.d.spring.web.PropertySourcedRequestMappingHandlerMapping [PropertySourcedRequestMappingHandlerMapping.java : 69] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-03-30 21:28:43,003 [INFO] [main] o.s.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java : 373] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-30 21:28:44,156 [INFO] [main] o.s.w.s.mvc.method.annotation.RequestMappingHandlerAdapter [RequestMappingHandlerAdapter.java : 588] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@545b995e: startup date [Sat Mar 30 21:28:24 CST 2019]; root of context hierarchy
2019-03-30 21:28:44,326 [INFO] [main] o.s.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java : 373] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-30 21:28:44,326 [INFO] [main] o.s.web.servlet.handler.SimpleUrlHandlerMapping [AbstractUrlHandlerMapping.java : 373] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-30 21:28:44,368 [INFO] [main] o.s.w.s.m.m.annotation.ExceptionHandlerExceptionResolver [ExceptionHandlerExceptionResolver.java : 288] Detected @ExceptionHandler methods in RRExceptionHandler
2019-03-30 21:28:45,733 [INFO] [main] org.springframework.ui.freemarker.SpringTemplateLoader [SpringTemplateLoader.java : 62] SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.web.context.support.GenericWebApplicationContext@545b995e: startup date [Sat Mar 30 21:28:24 CST 2019]; root of context hierarchy] and template loader path [classpath:/templates/]
2019-03-30 21:28:45,735 [INFO] [main] o.s.web.servlet.view.freemarker.FreeMarkerConfigurer [FreeMarkerConfigurer.java : 131] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-03-30 21:28:46,257 [INFO] [main] o.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java : 356] Starting beans in phase 2147483647
2019-03-30 21:28:46,257 [INFO] [main] s.d.spring.web.plugins.DocumentationPluginsBootstrapper [DocumentationPluginsBootstrapper.java : 147] Context refreshed
2019-03-30 21:28:46,311 [INFO] [main] s.d.spring.web.plugins.DocumentationPluginsBootstrapper [DocumentationPluginsBootstrapper.java : 150] Found 1 custom documentation plugin(s)
2019-03-30 21:28:46,396 [INFO] [main] s.d.spring.web.scanners.ApiListingReferenceScanner [ApiListingReferenceScanner.java : 41] Scanning for api listing references
2019-03-30 21:28:46,862 [INFO] [main] s.d.s.web.readers.operation.CachingOperationNameGenerator [CachingOperationNameGenerator.java : 40] Generating unique operation named: userInfoUsingGET_1
2019-03-30 21:28:46,967 [INFO] [SimpleAsyncTaskExecutor-1] o.s.amqp.rabbit.connection.CachingConnectionFactory [AbstractConnectionFactory.java : 455] Attempting to connect to: [localhost:5672]
2019-03-30 21:28:47,155 [INFO] [SimpleAsyncTaskExecutor-1] o.s.amqp.rabbit.connection.CachingConnectionFactory [AbstractConnectionFactory.java : 471] Created new connection: rabbitConnectionFactory#231cdda8:0/SimpleConnection@28e4977a [delegate=amqp://guest@127.0.0.1:5672/, localPort= 61129]
2019-03-30 21:28:47,454 [INFO] [main] io.renren.GoodsDetailMaker [StartupInfoLogger.java : 59] Started GoodsDetailMaker in 25.553 seconds (JVM running for 31.239)
2019-03-30 21:28:47,892 [DEBUG] [main] io.renren.dao.goods.GoodsDao.selectById [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT id AS id,goods_title AS goodsTitle,goods_img AS goodsImg,goods_detail AS goodsDetail,goods_min_price AS goodsMinPrice,goods_max_price AS goodsMaxPrice,org_min_price AS orgMinPrice,org_max_price AS orgMaxPrice,`location`,delivery_free AS deliveryFree,goods_stock AS goodsStock,pay_count AS payCount,one_category_id AS oneCategoryId,two_category_id AS twoCategoryId,three_category_id AS threeCategoryId,brand_id AS brandId,publish_status AS publishStatus,audit_status AS auditStatus,seller_id AS sellerId FROM goods WHERE id=? 
2019-03-30 21:28:47,976 [DEBUG] [main] io.renren.dao.goods.GoodsDao.selectById [BaseJdbcLogger.java : 159] ==> Parameters: 99(Integer)
2019-03-30 21:28:48,040 [DEBUG] [main] io.renren.dao.goods.GoodsDao.selectById [BaseJdbcLogger.java : 159] <==      Total: 1
2019-03-30 21:28:48,489 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,493 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 品牌(String), 2(Integer)
2019-03-30 21:28:48,502 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,526 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,530 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 156(Integer), 志高(String), 2019-03-30 21:28:48.511(Timestamp)
2019-03-30 21:28:48,540 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,555 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,557 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 型号(String), 2(Integer)
2019-03-30 21:28:48,560 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,571 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,573 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 157(Integer), YS-K3202(String), 2019-03-30 21:28:48.57(Timestamp)
2019-03-30 21:28:48,575 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,582 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,584 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 3(Integer), 售后服务(String), 2(Integer)
2019-03-30 21:28:48,588 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,595 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,596 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 158(Integer), 店铺三包(String), 2019-03-30 21:28:48.593(Timestamp)
2019-03-30 21:28:48,599 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,607 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,608 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 4(Integer), 产地(String), 2(Integer)
2019-03-30 21:28:48,611 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,623 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,625 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 159(Integer), 中国大陆(String), 2019-03-30 21:28:48.621(Timestamp)
2019-03-30 21:28:48,627 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,634 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,635 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 5(Integer), 屏幕比例(String), 2(Integer)
2019-03-30 21:28:48,637 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,651 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,652 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 160(Integer), 16:9(String), 2019-03-30 21:28:48.65(Timestamp)
2019-03-30 21:28:48,654 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,662 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,663 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 6(Integer), 面板类型(String), 2(Integer)
2019-03-30 21:28:48,666 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,671 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,672 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 161(Integer), IPS(String), 2019-03-30 21:28:48.67(Timestamp)
2019-03-30 21:28:48,674 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,679 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,680 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 7(Integer), 分辨率(String), 2(Integer)
2019-03-30 21:28:48,682 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,688 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,689 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 162(Integer), 1366x768(String), 2019-03-30 21:28:48.687(Timestamp)
2019-03-30 21:28:48,691 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,700 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,701 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer), 颜色分类(String), 2(Integer)
2019-03-30 21:28:48,705 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,711 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,712 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 163(Integer), 32寸高清屏【普通电视版】,32寸高清屏【智能网络版】,42寸高清屏【普通电视版】,42寸高清屏【智能网络版】,55寸高清屏【普通电视版】,55寸高清屏【智能网络版】,30寸高清屏【智能网络版】,32寸高清【曲面网络版WIFI】,42寸高清【曲面网络版WIFI】,32寸高清级【普通电视版】,32寸高清级【智能网络版】,42寸高清级【普通电视版】,42寸高清级【智能网络版】,60寸高清屏【普通电视版】,60寸高清屏【智能网络版】,46寸高清屏【智能网络版】,46寸高清屏【普通电视版】,32寸一线屏【普通电视版】,32寸一线屏【智能网络版】,46寸高清级【普通电视版】,46寸高清级【智能网络版】(String), 2019-03-30 21:28:48.709(Timestamp)
2019-03-30 21:28:48,715 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,721 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,722 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 9(Integer), 最佳观看距离(String), 2(Integer)
2019-03-30 21:28:48,725 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,729 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,730 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 164(Integer), 2.5m(含)-2.9m(含)(String), 2019-03-30 21:28:48.728(Timestamp)
2019-03-30 21:28:48,733 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,738 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,739 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 10(Integer), 能效等级(String), 2(Integer)
2019-03-30 21:28:48,740 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,747 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,748 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 165(Integer), 三级(String), 2019-03-30 21:28:48.746(Timestamp)
2019-03-30 21:28:48,750 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,755 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,756 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 11(Integer), 背光灯类型(String), 2(Integer)
2019-03-30 21:28:48,758 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,764 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,765 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 166(Integer), LED发光二极管(String), 2019-03-30 21:28:48.763(Timestamp)
2019-03-30 21:28:48,767 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,780 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,781 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 12(Integer), 电视类型(String), 2(Integer)
2019-03-30 21:28:48,784 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,791 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,793 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 167(Integer), LED电视(String), 2019-03-30 21:28:48.79(Timestamp)
2019-03-30 21:28:48,795 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,801 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,802 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 13(Integer), 网络连接方式(String), 2(Integer)
2019-03-30 21:28:48,804 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,810 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,811 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 168(Integer), 全部支持(String), 2019-03-30 21:28:48.809(Timestamp)
2019-03-30 21:28:48,812 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,818 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,820 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 14(Integer), 扫描方式(String), 2(Integer)
2019-03-30 21:28:48,822 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,827 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,828 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 169(Integer), 逐行扫描(String), 2019-03-30 21:28:48.826(Timestamp)
2019-03-30 21:28:48,830 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,835 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,836 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 15(Integer), 扬声器数量(String), 2(Integer)
2019-03-30 21:28:48,838 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,843 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,844 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 170(Integer), 2个(String), 2019-03-30 21:28:48.842(Timestamp)
2019-03-30 21:28:48,846 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,853 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,854 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 16(Integer), 接收制式(String), 2(Integer)
2019-03-30 21:28:48,857 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,863 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,864 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 171(Integer), PAL\NTSC\SECAM(String), 2019-03-30 21:28:48.862(Timestamp)
2019-03-30 21:28:48,867 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,873 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,873 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 17(Integer), 附加功能(String), 2(Integer)
2019-03-30 21:28:48,876 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,882 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,883 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 172(Integer), 地面数字信号接收,数字一体机,USB媒体播放,WIFI,网络高清播放,网络在线电影(String), 2019-03-30 21:28:48.881(Timestamp)
2019-03-30 21:28:48,885 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,890 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,891 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 18(Integer), 操作系统(String), 2(Integer)
2019-03-30 21:28:48,893 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,898 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,900 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 173(Integer), 安卓(String), 2019-03-30 21:28:48.898(Timestamp)
2019-03-30 21:28:48,902 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,908 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,909 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 19(Integer), HDMI接口数量(String), 2(Integer)
2019-03-30 21:28:48,911 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,918 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,919 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 174(Integer), 1个(String), 2019-03-30 21:28:48.917(Timestamp)
2019-03-30 21:28:48,922 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,929 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,930 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 20(Integer), 视频显示格式(String), 2(Integer)
2019-03-30 21:28:48,932 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,938 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,938 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 175(Integer), 1080p(String), 2019-03-30 21:28:48.937(Timestamp)
2019-03-30 21:28:48,940 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,946 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,946 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 21(Integer), 上市时间(String), 2(Integer)
2019-03-30 21:28:48,948 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,955 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,956 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 176(Integer), 2017-07(String), 2019-03-30 21:28:48.954(Timestamp)
2019-03-30 21:28:48,958 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,964 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,965 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 22(Integer), 屏幕尺寸(String), 2(Integer)
2019-03-30 21:28:48,967 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,972 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,972 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 177(Integer), 32英寸(String), 2019-03-30 21:28:48.971(Timestamp)
2019-03-30 21:28:48,974 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,979 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,980 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 23(Integer), 能效备案号(String), 2(Integer)
2019-03-30 21:28:48,982 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,987 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:48,988 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 178(Integer), 201801-22-11021271-2751671104235(String), 2019-03-30 21:28:48.986(Timestamp)
2019-03-30 21:28:48,990 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:48,996 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:48,997 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 24(Integer), 电视形态(String), 2(Integer)
2019-03-30 21:28:48,999 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:49,005 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:49,006 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 179(Integer), 平板(String), 2019-03-30 21:28:49.004(Timestamp)
2019-03-30 21:28:49,009 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:49,014 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_key ( order_num, prop_key, brand_id ) VALUES ( ?, ?, ? ) 
2019-03-30 21:28:49,014 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 25(Integer), 采购地(String), 2(Integer)
2019-03-30 21:28:49,017 [DEBUG] [main] io.renren.dao.goods.GoodsPropsKeyDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:49,022 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO goods_props_value ( brand_id, props_id, value_name, create_time ) VALUES ( ?, ?, ?, ? ) 
2019-03-30 21:28:49,023 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] ==> Parameters: 2(Integer), 180(Integer), 中国大陆(String), 2019-03-30 21:28:49.021(Timestamp)
2019-03-30 21:28:49,026 [DEBUG] [main] io.renren.dao.goods.GoodsPropsValueDao.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-03-30 21:28:49,088 [INFO] [Thread-2] o.s.web.context.support.GenericWebApplicationContext [AbstractApplicationContext.java : 993] Closing org.springframework.web.context.support.GenericWebApplicationContext@545b995e: startup date [Sat Mar 30 21:28:24 CST 2019]; root of context hierarchy
2019-03-30 21:28:49,094 [INFO] [Thread-2] o.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java : 369] Stopping beans in phase 2147483647
2019-03-30 21:28:49,210 [INFO] [Thread-2] o.s.amqp.rabbit.listener.SimpleMessageListenerContainer [SimpleMessageListenerContainer.java : 534] Waiting for workers to finish.
2019-03-30 21:28:49,487 [INFO] [Thread-2] o.s.amqp.rabbit.listener.SimpleMessageListenerContainer [SimpleMessageListenerContainer.java : 537] Successfully waited for workers to finish.
2019-03-30 21:28:49,488 [INFO] [Thread-2] o.springframework.context.support.DefaultLifecycleProcessor [DefaultLifecycleProcessor.java : 369] Stopping beans in phase 0
2019-03-30 21:28:49,501 [INFO] [Thread-2] o.s.amqp.rabbit.listener.SimpleMessageListenerContainer [AbstractMessageListenerContainer.java : 1089] Shutdown ignored - container is not active already
2019-03-30 21:28:49,609 [INFO] [Thread-2] com.alibaba.druid.pool.DruidDataSource [DruidDataSource.java : 1825] {dataSource-1} closed
